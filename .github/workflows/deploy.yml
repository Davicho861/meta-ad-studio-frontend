name: CD - GKE

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend/server
          file: ./src/backend/server/Dockerfile
          push: true
          tags: |
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/meta_ad_studio_api:latest
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/meta_ad_studio_api:${{ env.IMAGE_TAG }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/frontend/meta-verse-visualizer-main
          file: ./src/frontend/meta-verse-visualizer-main/Dockerfile
          push: true
          tags: |
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/meta_ad_studio_visualizer:latest
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/meta_ad_studio_visualizer:${{ env.IMAGE_TAG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GCP_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Apply kustomize manifests (create/patch resources)
        run: kubectl apply -k infra/k8s/base

      - name: Update deployments with new image tags
        run: |
          kubectl -n meta-ad-studio set image deployment/backend backend=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/meta_ad_studio_api:${{ env.IMAGE_TAG }} || true
          kubectl -n meta-ad-studio set image deployment/frontend frontend=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/meta_ad_studio_visualizer:${{ env.IMAGE_TAG }} || true

name: Build and Publish Frontend

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/frontend
          file: ./src/frontend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/meta-ad-studio-frontend:latest
            ghcr.io/${{ github.repository_owner }}/meta-ad-studio-frontend:${{ github.sha }}
name: Deploy Meta Ad Studio

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for api-server
        run: cd src/backend/server && npm install --legacy-peer-deps

      - name: Run tests for api-server
        run: cd src/backend/server && npm test

      - name: Install dependencies for meta-verse-visualizer
    run: cd src/frontend/meta-verse-visualizer-main && npm install --legacy-peer-deps

      - name: Build meta-verse-visualizer
    run: cd src/frontend/meta-verse-visualizer-main && npm run build

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push api-server image
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend/server
          file: ./src/backend/server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/meta-ad-studio-api:latest

      - name: Build and push meta-verse-visualizer image
          uses: docker/build-push-action@v4
          with:
            context: ./src/frontend/meta-verse-visualizer-main
            file: ./src/frontend/meta-verse-visualizer-main/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/meta-ad-studio-frontend:latest

      - name: Deploy to production
        run: echo "Deploying to production..."
