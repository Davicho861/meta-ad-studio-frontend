version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-produser}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB:-meta_ad_studio}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-produser} -d ${POSTGRES_DB:-meta_ad_studio} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-server:
    build:
      context: ./packages/api-server/server
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      REDIS_URL: "${REDIS_URL:-redis://redis:6379}"
    ports:
      - '3002:3001'
    restart: unless-stopped
    command: sh -c "npm run migrate && npm run seed && npm start"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: prod
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  postgres_data:
