diff --git a/backend/package.json b/backend/package.json
index 6fca052f..fd852eba 100644
--- a/backend/package.json
+++ b/backend/package.json
@@ -4,13 +4,14 @@
   "private": true,
   "type": "module",
   "scripts": {
-    "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
+  "dev": "NODE_OPTIONS=\"--loader=ts-node/esm\" ts-node-dev --respawn --transpile-only src/index.ts",
     "build": "tsc -p tsconfig.json",
     "start": "node dist/index.js",
     "prisma:generate": "prisma generate",
     "prisma:migrate": "prisma migrate dev --name init"
   },
   "dependencies": {
+    "@prisma/client": "^5.22.0",
     "axios": "^1.4.0",
     "bcrypt": "^5.1.0",
     "dotenv": "^16.1.4",
@@ -19,10 +20,9 @@
     "prisma": "^5.10.1"
   },
   "devDependencies": {
-    "ts-node-dev": "^2.0.0",
-    "typescript": "^5.5.0",
     "@types/express": "^4.17.17",
     "@types/jsonwebtoken": "^9.0.2",
-    "@types/bcrypt": "^5.0.3"
+    "ts-node-dev": "^2.0.0",
+    "typescript": "^5.5.0"
   }
 }
diff --git a/desktop/Meta-Ad-Studio-UI-Dev.desktop b/desktop/Meta-Ad-Studio-UI-Dev.desktop
index 329cdde6..1947c546 100644
--- a/desktop/Meta-Ad-Studio-UI-Dev.desktop
+++ b/desktop/Meta-Ad-Studio-UI-Dev.desktop
@@ -1,9 +1,13 @@
 [Desktop Entry]
-Name=Meta-Ad-Studio UI Dev
-Comment=Start the Meta-Ad-Studio frontend development environment (hot-reload)
-Exec=gnome-terminal -- bash -lc "/home/davicho/Davicho861/Meta-Ad-Studio-/guardian-script.sh"
+Name=Meta-Ad Studio (Dev Env)
+Comment=Lanza el entorno de desarrollo (UI + backend + bd) para Meta-Ad-Studio-
+[Desktop Entry]
+[Desktop Entry]
+Name=Meta-Ad Studio (Dev Env)
+Comment=Lanza el entorno de desarrollo (UI + backend + bd) para Meta-Ad-Studio-
+Exec=gnome-terminal -- /bin/bash -c "'$HOME/Davicho861/Meta-Ad-Studio-/guardian-script.sh'; exec bash"
+Icon=applications-development
 Terminal=true
 Type=Application
-Categories=Development;Education;
-Icon=applications-development
+Categories=Development;IDE;
 StartupNotify=true
diff --git a/devtools/frontend.Dockerfile.dev b/devtools/frontend.Dockerfile.dev
index 82a7778c..1e415763 100644
--- a/devtools/frontend.Dockerfile.dev
+++ b/devtools/frontend.Dockerfile.dev
@@ -4,7 +4,8 @@ WORKDIR /app
 
 # Copy package manifests and install all deps including devDeps
 COPY frontend/package.json frontend/package-lock.json frontend/tsconfig.json ./
-RUN npm ci
+# Temporal: usar npm install con legacy-peer-deps para evitar fallos de npm ci en entornos de desarrollo
+RUN npm install --legacy-peer-deps --silent
 
 # Copy sources
 COPY frontend .
diff --git a/docker-compose.dev.yml b/docker-compose.dev.yml
index fa56d847..0b783619 100644
--- a/docker-compose.dev.yml
+++ b/docker-compose.dev.yml
@@ -1,5 +1,66 @@
 version: '3.8'
 
+services:
+  db:
+    image: postgres:15-alpine
+    environment:
+      POSTGRES_USER: "${POSTGRES_USER:-devuser}"
+      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-devpass}"
+      POSTGRES_DB: "${POSTGRES_DB:-meta_ad_studio}"
+    ports:
+      - "5433:5432"
+    volumes:
+      - postgres_data:/var/lib/postgresql/data
+    healthcheck:
+      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-devuser} -d ${POSTGRES_DB:-meta_ad_studio} || exit 1"]
+      interval: 10s
+      timeout: 5s
+      retries: 5
+
+  redis:
+    image: redis:7-alpine
+    ports:
+      - "6379:6379"
+    healthcheck:
+      test: ["CMD", "redis-cli", "ping"]
+      interval: 10s
+      timeout: 5s
+      retries: 5
+
+  api-server:
+    build:
+      context: ./packages/api-server/server
+      dockerfile: Dockerfile
+    environment:
+      DATABASE_URL: "${DATABASE_URL:-postgresql://devuser:devpass@db:5432/meta_ad_studio}"
+      REDIS_URL: "redis://redis:6379"
+    ports:
+      - '3002:3001'
+    command: sh -c "npm run migrate || true && npm run seed || true && npm run dev"
+    depends_on:
+      db:
+        condition: service_healthy
+      redis:
+        condition: service_healthy
+
+  frontend:
+    image: node:20
+    working_dir: /app
+    volumes:
+      - ./frontend:/app:cached
+      - /app/node_modules
+    command: sh -c "npm ci --silent || true && npm run dev -- --host"
+    ports:
+      - "5173:5173"
+    depends_on:
+      - api-server
+    environment:
+      - NODE_ENV=development
+
+volumes:
+  postgres_data:
+version: '3.8'
+
 services:
   frontend:
     # Frontend dev with hot-reload using devtools/frontend.Dockerfile.dev
diff --git a/frontend b/frontend
--- a/frontend
+++ b/frontend
@@ -1 +1 @@
-Subproject commit 664c8f225247b922c2dbd970296d1aff1dc8fafe
+Subproject commit 664c8f225247b922c2dbd970296d1aff1dc8fafe-dirty
diff --git a/guardian-script.sh b/guardian-script.sh
index f076eeb7..c550cb4b 100755
--- a/guardian-script.sh
+++ b/guardian-script.sh
@@ -4,53 +4,22 @@ set -euo pipefail
 ROOT_DIR="$(cd "$(dirname "$0")" && pwd)"
 ENV_FILE="$ROOT_DIR/.env.development"
 
-echo "Guardian: pre-flight checks for Meta-Ad-Studio dev environment"
+echo "Orquestador: comprobaciones iniciales para Meta-Ad-Studio dev environment"
 
-# Check docker
-if ! command -v docker >/dev/null 2>&1; then
-    echo "Docker no está instalado. Instálalo y vuelve a intentarlo."
-    exit 1
-fi
-
-# Check docker-compose
-if ! command -v docker-compose >/dev/null 2>&1; then
-    echo "docker-compose no está instalado. Instálalo y vuelve a intentarlo."
-    exit 1
-fi
-
-# Check .env
-if [ ! -f "$ENV_FILE" ]; then
-    echo ".env.development no encontrado en $ROOT_DIR. Crea uno basado en .env.example si existe."
-    exit 1
-fi
-
-check_port() {
-    local port=$1
-    if ss -ltn "sport = :$port" | grep -q LISTEN; then
-        echo "Puerto $port en uso. Para identificar el proceso ejecuta: sudo lsof -i :$port || ss -ltnp | grep ':$port'"
-        return 1
+# Utilities
+fail_if_missing() {
+    if ! command -v "$1" >/dev/null 2>&1; then
+        echo "$2"
+        exit 1
     fi
-    return 0
 }
 
-PORTS=(5173 4000 5432 6379)
-conflicts=()
-for p in "${PORTS[@]}"; do
-    if ! check_port "$p"; then
-        conflicts+=("$p")
-    fi
-done
+fail_if_missing docker "Docker no está instalado. Instálalo y vuelve a intentarlo."
+fail_if_missing docker-compose "docker-compose no está instalado. Instálalo y vuelve a intentarlo."
 
-if [ ${#conflicts[@]} -ne 0 ]; then
-    echo "Se detectaron puertos en conflicto: ${conflicts[*]}."
-    echo "Opciones: 1) Detener procesos que usan esos puertos, 2) Remapear puertos en docker-compose.dev.yml."
-    echo "Comandos útiles para diagnosticar:"
-    for p in "${conflicts[@]}"; do
-        echo "  sudo lsof -i :$p"
-        echo "  ss -ltnp | grep ':$p'"
-    done
-    echo "El Guardian no continuará hasta que se resuelvan los conflictos." 
-    exit 2
+if [ ! -f "$ENV_FILE" ]; then
+    echo ".env.development no encontrado en $ROOT_DIR. Crea uno basado en .env.example si lo necesitas."
+    # no fatal; allow user to proceed if compose files contain necessary defaults
 fi
 
 # Normalize compose project name
@@ -61,6 +30,60 @@ if [ -z "$SAFE_NAME" ]; then
 fi
 export COMPOSE_PROJECT_NAME="$SAFE_NAME"
 
-# Run the start script
-echo "Pre-flight checks OK. Lanzando entorno con ./scripts/start-dev-fullstack.sh"
-exec "$ROOT_DIR/scripts/start-dev-fullstack.sh"
+COMPOSE_FILE="$ROOT_DIR/docker-compose.dev.yml"
+
+running_containers() {
+    # returns list of running container IDs for the compose project
+    docker-compose -p "$COMPOSE_PROJECT_NAME" -f "$COMPOSE_FILE" ps -q 2>/dev/null || true
+}
+
+start_flow() {
+    echo "Iniciando flujo de arranque: actualización Git y levantar servicios..."
+    (cd "$ROOT_DIR" && git pull --ff-only || true)
+    (cd "$ROOT_DIR" && git submodule update --init --recursive || true)
+    echo "Levantando servicios (docker-compose up -d --build)..."
+    docker-compose -p "$COMPOSE_PROJECT_NAME" -f "$COMPOSE_FILE" up -d --build
+    echo "Servicios levantados. Para ver logs: docker-compose -p $COMPOSE_PROJECT_NAME -f $COMPOSE_FILE logs -f"
+}
+
+interactive_menu() {
+    echo
+    echo "El entorno '$COMPOSE_PROJECT_NAME' ya está en ejecución. ¿Qué deseas hacer?"
+    echo "(1) Ver el estado y los logs en tiempo real"
+    echo "(2) Reiniciar los servicios"
+    echo "(3) Detener los servicios por completo"
+    echo "(Cualquier otra tecla) Salir"
+    read -r -p "Selecciona una opción: " choice
+    case "$choice" in
+        1)
+            echo "Mostrando logs en tiempo real (Ctrl+C para salir)..."
+            docker-compose -p "$COMPOSE_PROJECT_NAME" -f "$COMPOSE_FILE" ps
+            docker-compose -p "$COMPOSE_PROJECT_NAME" -f "$COMPOSE_FILE" logs -f
+            ;;
+        2)
+            echo "Reiniciando servicios..."
+            docker-compose -p "$COMPOSE_PROJECT_NAME" -f "$COMPOSE_FILE" restart
+            echo "Reinicio completo. Usa logs o ps para verificar estado."
+            ;;
+        3)
+            echo "Deteniendo servicios..."
+            docker-compose -p "$COMPOSE_PROJECT_NAME" -f "$COMPOSE_FILE" down
+            echo "Servicios detenidos."
+            ;;
+        *)
+            echo "Saliendo sin cambios."
+            ;;
+    esac
+}
+
+echo "Comprobando contenedores del proyecto '$COMPOSE_PROJECT_NAME'..."
+running=$(running_containers)
+if [ -z "${running// /}" ]; then
+    echo "No hay contenedores en ejecución para $COMPOSE_PROJECT_NAME. Procediendo con arranque."
+    start_flow
+else
+    echo "Se detectaron contenedores en ejecución para $COMPOSE_PROJECT_NAME:" && docker ps --filter "name=${COMPOSE_PROJECT_NAME}" --format 'table {{.Names}}	{{.Status}}'
+    interactive_menu
+fi
+
+exit 0
diff --git a/packages/api-server/server/package.json b/packages/api-server/server/package.json
index 7057d2d9..55bdce26 100644
--- a/packages/api-server/server/package.json
+++ b/packages/api-server/server/package.json
@@ -7,6 +7,8 @@
     "build": "tsc",
     "start": "node -r dotenv/config dist/index.js",
     "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
+  "migrate": "npx prisma migrate deploy --schema=./prisma/schema.prisma",
+  "seed": "node ./prisma/seed.js || node -e \"console.log('no seed script')\"",
     "test": "dotenv -e .env -- vitest run",
     "postinstall": "prisma generate --schema=./prisma/schema.prisma"
   },
