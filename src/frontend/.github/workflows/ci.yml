name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Root Dependencies
        run: npm install

      - name: Run Frontend Lint
        run: npm run lint --workspace=packages/Meta\ Ad\ Studio-sdlc-nexus-main

      - name: Run Backend Lint
        run: npm run lint --workspace=server

      - name: Run Frontend Tests (Vitest)
        run: npm test --workspace=packages/Meta\ Ad\ Studio-sdlc-nexus-main

      - name: Run Backend Tests (Jest/Supertest)
        run: npm test --workspace=server

  build-and-deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build and Run Docker Compose
        run: docker-compose -f infra/docker/docker-compose.yml up -d --build

      - name: Wait for services to be ready
        run: sleep 30

      - name: Run E2E Tests with Cypress
        uses: cypress-io/github-action@v5
        with:
          wait-on: 'http://localhost:8081' # Frontend port
          browser: chrome

      - name: Stop Docker Compose
        if: always()
        run: docker-compose -f infra/docker/docker-compose.yml down

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      - name: Build and Tag Backend Image
        run: |
          docker build -t ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO_NAME }./src/backend:latest ./server
          docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO_NAME }./src/backend:latest

      - name: Build and Tag Frontend Image
        run: |
          docker build -t ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO_NAME }./src/frontend:latest ./meta-verse-visualizer-main
          docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO_NAME }./src/frontend:latest

      - name: Deploy Backend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: meta-studio-backend
          region: ${{ vars.GCP_REGION }}
          image: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO_NAME }./src/backend:latest

      - name: Deploy Frontend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: meta-studio-frontend
          region: ${{ vars.GCP_REGION }}
          image: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO_NAME }./src/frontend:latest
          flags: --allow-unauthenticated
