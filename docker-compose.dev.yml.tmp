version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-devuser}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-devpass}"
      POSTGRES_DB: "${POSTGRES_DB:-meta_ad_studio}"
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-devuser} -d ${POSTGRES_DB:-meta_ad_studio} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-server:
    image: meta-ad-studio/api-server:dev
    build:
      context: ./packages/api-server/server
      dockerfile: Dockerfile
    volumes:
      - ./packages/api-server/server:/app:cached
      - /app/node_modules
    environment:
      DATABASE_URL: "${DATABASE_URL:-postgresql://devuser:devpass@db:5432/meta_ad_studio}"
      REDIS_URL: "redis://redis:6379"
    ports:
      - "3002:3001"
    command: sh -c "npm run migrate || true && npm run seed || true && npm run dev"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  backend:
    image: meta-ad-studio/backend:dev
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app/backend:cached
      - /app/backend/node_modules
    working_dir: /app/backend
    env_file:
      - ./.env.development
    command: sh -c "npm install --silent || true && npx prisma generate || true && npm run dev"
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    image: meta-ad-studio/frontend:dev
    build:
      context: .
      dockerfile: devtools/frontend.Dockerfile.dev
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    working_dir: /app
    env_file:
      - ./.env.development
    command: sh -c "npm install --silent || true && npm run dev -- --host"
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    depends_on:
      - api-server
      - backend

volumes:
  pgdata:
